# yadkin - Makefile for packaging Android
NAME = yadkin
BRANCH = linux
VERSION = @@VERSION@@
PREFIX = @@PREFIX@@
SRCURL = @@SRCURL@@
COMPANY = @@COMPANY@@ 
ORG = com.$(COMPANY).$(NAME)
CLITOOLS = commandlinetools-$(BRANCH)
TARGETS = "build-tools;31.0.0" "cmdline-tools;latest" "platform-tools" "ndk-bundle" "system-images;android-31;default;x86_64"
JDKBIN = @@JDKBIN@@
JDKVER = jdk-17.0.14+7

# main - Unpack dependencies and build the C utility
main: dependencies utility
	@printf "Build completed."

# dependencies - The primary target should just unpack deps (if needed), and download everything 
dependencies:
	test -d vendor/ || mkdir vendor/
	-rm -rf ./share/*
	-mkdir -p ./share/sdk/cmdline-tools/latest
	test -f vendor/$(CLITOOLS).tar.gz || \
		wget -O "vendor/$(CLITOOLS).tar.gz" "$(SRCURL)/yadkin/$(CLITOOLS).tar.gz"
	tar -xzf vendor/$(CLITOOLS).tar.gz -C ./share/sdk/cmdline-tools/
	test -f vendor/$(JDKBIN).tar.gz || \
		wget -O "vendor/$(JDKBIN).tar.gz" "$(SRCURL)/yadkin/$(JDKBIN).tar.gz"
	tar -xzf vendor/$(JDKBIN).tar.gz -C ./share/
	export JAVA_HOME=./share/$(JDKVER) && \
	export ANDROID_SDK_ROOT=./share/sdk && \
		./share/sdk/cmdline-tools/latest/bin/sdkmanager --sdk_root=./share/sdk/cmdline-tools $(TARGETS)

# utility - The builder utility for default Android projects
utility:
	cd src/ && $(MAKE)

# install - Install
install:
	mkdir -p $(PREFIX)/bin/
	mkdir -p $(PREFIX)/etc/$(NAME)/
	mkdir -p $(PREFIX)/include/$(NAME)/
	mkdir -p $(PREFIX)/share/$(NAME)/images/
	# Create the Java/JVM dir
	mv ./share/$(JDKVER) $(PREFIX)/share/$(NAME)/
	ln -s $(PREFIX)/share/$(NAME)/$(JDKVER)/java $(PREFIX)/bin/
	ln -s $(PREFIX)/share/$(NAME)/$(JDKVER)/keytool $(PREFIX)/bin/
	# Create the SDK home
	mv ./share/sdk/cmdline-tools $(PREFIX)/share/$(NAME)/sdk
	ln -s $(PREFIX)/share/$(NAME)/sdk/platform-tools/adb $(PREFIX)/bin/
	ln -s $(PREFIX)/share/$(NAME)/sdk/emulator/emulator $(PREFIX)/bin/
	# Copy aliases and environment variables
	mv yadkin-init.sh $(PREFIX)/yadkin-init.sh
	@echo "$(NAME) was installed successfully, system for PATH changes to take effect."
	@echo "If you installed this to a non-standard location (like \$$HOME/.yadkin), be"
	@echo "sure to add the following line to your .bashrc or .bash_profile:"
	@echo
	@echo "test -f \"$(PREFIX)/.yadkin\" && source \"$(PREFIX)/.yadkin\""
	@echo

# configuration-install - Install config files globally
configuration-install:
	test -d /etc/zsh/ || mkdir -p /etc/zsh/
	cp environment/unix.env /etc/profile.d/$(NAME).sh
	test -d /etc/profile.d/ || mkdir -p /etc/profile.d/
	cp environment/unix.env /etc/zsh/$(NAME).zsh
	printf "$(NAME) installed successfully, please restart your terminal or system for PATH changes to take effect.\n"

# uninstall - Get rid of this software and it's changes
uninstall:
	rm -rf $(PREFIX)/
	test -f /etc/profile.d/$(NAME).sh && rm -f /etc/profile.d/$(NAME).sh
	test -f /etc/zsh/$(NAME).zsh && rm -f /etc/zsh/$(NAME).zsh
	echo "$(NAME) uninstalled successfully.  Please restart your terminal or system for PATH changes to take effect."


# explain - List all the targets and what they do
explain:
	@sed -n '/^#/p' Makefile | sed 's/# //' | \
		awk -F - '{ printf "%-12s %s\n", $$1, $$2 }'


# clean - Remove dependencies
clean:
	-rm -rf share/
	-rm -f yadkin-init.sh
	


# docs - Create index.html
docs:
	markdown -S README.md > docs/index.html


.PHONY: build docs

