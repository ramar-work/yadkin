# ----------------------------------------- #
# yadkin - Makefile for packaging Android
#
# Right now, running this will allow a
# developer to build simple Android apps
# with Java (but w/o all the extra stuff, 
# Android Studio, etc).
#
# This process works cross-platform and will
# ensure that said developer can create and
# publish an app (in Java or Kotlin via the 
# command line) to Google's Play store.
#
# iOS and native SDL apps (that run on both
# platforms) is the next step.  But that's not 
# ready yet.
# ----------------------------------------- #
NAME = yadkin
VERSION = 0.04
PREFIX = __PREFIX__/$(NAME)
PKGSDL = SDL2-2.0.14
COMPANY = __COMPANY__
TARGET = __TARGET__
ORG = org.$(COMPANY).$(NAME)
TARGETS = "build-tools;31.0.0" "cmdline-tools;latest" "platform-tools" "ndk-bundle" "system-images;android-31;default;x86_64"
JDKBIN = __JDKSRC__
JDKVER = jdk-17.0.5+8

# main - the primary target should just unpack deps (if needed), and download everything 
main:
	-mkdir -p ./share/sdk/cmdline-tools/
	-cp -r ./vendor/cmdline-tools/base/ ./share/sdk/cmdline-tools/latest
	-cp -r ./vendor/cmdline-tools/linux/bin ./share/sdk/cmdline-tools/latest/
	-tar -xzf vendor/$(JDKBIN) -C share/
	export JAVA_HOME=./share/$(JDKVER) && \
	export ANDROID_SDK_ROOT=./share/sdk && \
		./share/sdk/cmdline-tools/latest/bin/sdkmanager $(TARGETS)


# install - install
install:
	mkdir -p $(PREFIX)/bin/
	mkdir -p $(PREFIX)/etc/$(NAME)/
	mkdir -p $(PREFIX)/include/$(NAME)/
	mkdir -p $(PREFIX)/share/
	mv share $(PREFIX)/share/$(NAME)
	mkdir -p $(PREFIX)/share/$(NAME)/images/
	ln -s $(PREFIX)/share/$(NAME)/$(JDKVER)/java $(PREFIX)/bin/
	ln -s $(PREFIX)/share/$(NAME)/$(JDKVER)/keytool $(PREFIX)/bin/
	ln -s $(PREFIX)/share/$(NAME)/sdk/platform-tools/adb $(PREFIX)/bin/
	ln -s $(PREFIX)/share/$(NAME)/sdk/emulator/emulator $(PREFIX)/bin/
	test -d /etc/zsh/ || mkdir -p /etc/zsh/
	test -d /etc/profile.d/ || mkdir -p /etc/profile.d/
	cp environment/unix.env /etc/profile.d/$(NAME).sh
	cp environment/unix.env /etc/zsh/$(NAME).zsh
	echo "$(NAME) installed successfully, please restart your terminal or system for PATH changes to take effect."


# uninstall - Uninstall


# android-device - Build a new Android device
android-device:
	export JAVA_HOME=./share/$(JDKVER) && \
	export ANDROID_SDK_ROOT=./share/sdk && \
	avdmanager create avd \
			-n ironhead_test \
			-k "system-images;android-28;google_apis;x86_64" \
			-p /opt/yadkin/share/images


image:
	cd $(PREFIX)/share/yadkin/sdk/cmdline-tools/latest/bin/ && \
		cmd /c avdmanager.bat --verbose create avd \
			--force -d 18 -n yadkin_pixel_3 -k "system-images;android-31;default;x86_64" -p `cygpath -w $(PREFIX)/share/images`

	
image-list:
	cd $(PREFIX)/share/yadkin/sdk/cmdline-tools/latest/bin/ && \
		cmd /c avdmanager.bat list

	
image-help:
	cd $(PREFIX)/share/yadkin/sdk/cmdline-tools/latest/bin/ && \
		cmd /c avdmanager.bat create avd --help 


# sdl-deps - Just unpack SDL and friends
sdl-deps:
	-tar -xzf vendor/$(PKGSDL).tar.gz -C build/SDL


# explain - List all the targets and what they do
explain:
	@sed -n '/^#/p' Makefile | sed 's/# //' | \
		awk -F - '{ printf "%-12s %s\n", $$1, $$2 }'


# clean - Remove dependencies
clean:
	rm -rf share/


# docs - Create index.html
docs:
	markdown -S README.md > docs/index.html


.PHONY: build docs

